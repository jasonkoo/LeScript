input {
    kafka {
         codec => plain {
            format => "%{message}"
        }
        zk_connect => "PUSH-010:2181,PUSH-012:2181,PUSH-018:2181" # string (optional), default: "localhost:2181"
        group_id => "logstashfb" # string (optional), default: "logstash"
        topic_id => "feedback-topic" # string (optional), default: "test"
        reset_beginning => false # boolean (optional), default: false
        consumer_threads => 12 # number (optional), default: 1
        queue_size => 20000 # number (optional), default: 20
        rebalance_max_retries => 4 # number (optional), default: 4
        rebalance_backoff_ms => 2000 # number (optional), default:  2000
        consumer_timeout_ms => -1 # number (optional), default: -1
        consumer_restart_on_error => true # boolean (optional), default: true
        consumer_restart_sleep_ms => 0 # number (optional), default: 0
        decorate_events => true # boolean (optional), default: true
        #consumer_id => "logstash-19" # string (optional) default: nil
        fetch_message_max_bytes => 1048576 # number (optional) default: 1048576
    }
}




filter {

  json {
    source => "message"
  }

if ![logTime] {
	drop {}
  }

  
  ruby {
           code => "require 'socket';event['host_str']=Socket.gethostname;event['myPid']=Process.pid;
             logtime=Time.parse(event['logTime']);
             event['file_time2']=logtime.strftime('%Y-%m-%d');
             logtime_i=logtime.to_i;event['logtime_str']=logtime_i;
             event['file_index3']=logtime.hour"
  }

}





output {


file {
    codec => "plain" # codec (optional), default: "plain"
    flush_interval => 15 # number (optional), default: 2
    gzip => false # boolean (optional), default: false
    message_format => "%{message}"
    path => "/data/logstash/logstash/data/fbfile-%{host_str}-%{file_time2}-%{file_index3}-%{myPid}" # string (required)
    workers => 10 # number (optional), default: 1
  }
}

