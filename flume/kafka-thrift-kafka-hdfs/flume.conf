PUSH-019

tier1.sources  = source1
tier1.channels = channel1
tier1.sinks = sink1

tier1.sources.source1.channels = channel1
tier1.sinks.sink1.channel = channel1
 
tier1.sources.source1.type = org.apache.flume.source.kafka.KafkaSource
tier1.sources.source1.zookeeperConnect = PUSH-010:2181,PUSH-011:2181,PUSH-012:2181,PUSH-013:2181,PUSH-018:2181
tier1.sources.source1.topic = push.data.feedback
tier1.sources.source1.groupId = leap.flume.test
tier1.sources.source1.batchSize = 100
tier1.sources.source1.batchDurationMillis = 3000
tier1.sources.source1.kafka.consumer.timeout.ms = 1000

tier1.channels.channel1.type = memory
tier1.channels.channel1.capacity = 1000
tier1.channels.channel1.transactionCapacity = 100

tier1.sinks.sink1.type = thrift
tier1.sinks.sink1.hostname = bg26.lenovo.com
tier1.sinks.sink1.port = 10101
tier1.sinks.sink1.batch-size = 100


------------------------------------------------------------------------
bg26.lenovo.com


tier1.sources  = source1
tier1.channels = channel1
tier1.sinks = sink1

tier1.sources.source1.channels = channel1
tier1.sinks.sink1.channel = channel1


tier1.sources.source1.type = thrift
tier1.sources.source1.bind = bg26.lenovo.com
tier1.sources.source1.port = 10101
tier1.sources.source1.threads = 10

tier1.sources.source1.interceptors = i1
tier1.sources.source1.interceptors.i1.type = static
tier1.sources.source1.interceptors.i1.key = topic
tier1.sources.source1.interceptors.i1.value = com.lenovo.leap.test
tier1.sources.source1.interceptors.i1.preserveExisting = false

tier1.channels.channel1.type = memory
tier1.channels.channel1.capacity = 1000
tier1.channels.channel1.transactionCapacity = 100

tier1.sinks.sink1.type = org.apache.flume.sink.kafka.KafkaSink
tier1.sinks.sink1.topic = com.lenovo.leap.test
tier1.sinks.sink1.brokerList = bg28.lenovo.com:9092,bg29.lenovo.com:9092
tier1.sinks.sink1.batchSize = 100
------------------------------------------------------------------------------------
bg27.lenovo.com

tier1.sources  = source1
tier1.channels = channel1
tier1.sinks = sink1 sink2 sink3 sink4


tier1.sources.source1.channels = channel1
tier1.sinks.sink1.channel = channel1
tier1.sinks.sink2.channel = channel1
tier1.sinks.sink3.channel = channel1
tier1.sinks.sink4.channel = channel1

tier1.sources.source1.type = org.apache.flume.source.kafka.KafkaSource
tier1.sources.source1.zookeeperConnect = bg35.lenovo.com:2181,bg36.lenovo.com:2181,bg37.lenovo.com:2181/kafka
tier1.sources.source1.topic = com.lenovo.leap.test
tier1.sources.source1.groupId = com.lenovo.leap.test.flume
tier1.sources.source1.batchSize = 20
tier1.sources.source1.batchDurationMillis = 3000
tier1.sources.source1.kafka.consumer.timeout.ms = 1000

tier1.sources.source1.interceptors = i1

tier1.sources.source1.interceptors.i1.type = host
tier1.sources.source1.interceptors.i1.useIP = false
tier1.sources.source1.interceptors.i1.hostHeader = hostname

tier1.channels.channel1.type = memory
tier1.channels.channel1.capacity = 10000
tier1.channels.channel1.transactionCapacity = 100


tier1.sinks.sink1.type = hdfs
tier1.sinks.sink1.hdfs.writeFormat = Text
tier1.sinks.sink1.hdfs.fileType = DataStream
tier1.sinks.sink1.hdfs.filePrefix = %{hostname}-sink1
tier1.sinks.sink1.hdfs.useLocalTimeStamp = true
tier1.sinks.sink1.hdfs.path = /user/flume/feedback/
tier1.sinks.sink1.hdfs.threadsPoolSize = 2
tier1.sinks.sink1.hdfs.idleTimeout = 1500
tier1.sinks.sink1.hdfs.rollCount = 0
tier1.sinks.sink1.hdfs.rollSize = 66060288
tier1.sinks.sink1.hdfs.rollInterval = 10800
tier1.sinks.sink1.hdfs.batchSize = 100

tier1.sinks.sink2.type = hdfs
tier1.sinks.sink2.hdfs.writeFormat = Text
tier1.sinks.sink2.hdfs.fileType = DataStream
tier1.sinks.sink2.hdfs.filePrefix = %{hostname}-sink2
tier1.sinks.sink2.hdfs.useLocalTimeStamp = true
tier1.sinks.sink2.hdfs.path = /user/flume/feedback/
tier1.sinks.sink2.hdfs.threadsPoolSize = 2
tier1.sinks.sink2.hdfs.idleTimeout = 1500
tier1.sinks.sink2.hdfs.rollCount = 0
tier1.sinks.sink2.hdfs.rollSize = 66060288
tier1.sinks.sink2.hdfs.rollInterval = 10800
tier1.sinks.sink2.hdfs.batchSize = 100

tier1.sinks.sink3.type = hdfs
tier1.sinks.sink3.hdfs.writeFormat = Text
tier1.sinks.sink3.hdfs.fileType = DataStream
tier1.sinks.sink3.hdfs.filePrefix = %{hostname}-sink3
tier1.sinks.sink3.hdfs.useLocalTimeStamp = true
tier1.sinks.sink3.hdfs.path = /user/flume/feedback/
tier1.sinks.sink3.hdfs.threadsPoolSize = 2
tier1.sinks.sink3.hdfs.idleTimeout = 1500
tier1.sinks.sink3.hdfs.rollCount = 0
tier1.sinks.sink3.hdfs.rollSize = 66060288
tier1.sinks.sink3.hdfs.rollInterval = 10800
tier1.sinks.sink3.hdfs.batchSize = 100

tier1.sinks.sink4.type = hdfs
tier1.sinks.sink4.hdfs.writeFormat = Text
tier1.sinks.sink4.hdfs.fileType = DataStream
tier1.sinks.sink4.hdfs.filePrefix = %{hostname}-sink4
tier1.sinks.sink4.hdfs.useLocalTimeStamp = true
tier1.sinks.sink4.hdfs.path = /user/flume/feedback/
tier1.sinks.sink4.hdfs.threadsPoolSize = 2
tier1.sinks.sink4.hdfs.idleTimeout = 1500
tier1.sinks.sink4.hdfs.rollCount = 0
tier1.sinks.sink4.hdfs.rollSize = 66060288
tier1.sinks.sink4.hdfs.rollInterval = 10800
tier1.sinks.sink4.hdfs.batchSize = 100